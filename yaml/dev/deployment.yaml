apiVersion: v1
kind: Namespace
metadata:
 # name: demo-namespace
 
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyI4MDg1LW5leHVzLWF3cWJhYm50LnByb2RxYS5vcHNlcmEuaW8iOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiYUFCRE84dXU2ZyIsImVtYWlsIjoibmF3YXpAb3BzZXJhLmlvIiwiYXV0aCI6IllXUnRhVzQ2WVVGQ1JFODRkWFUyWnc9PSJ9fX0=
kind: Secret
metadata:
  creationTimestamp: null
  name: docker-nexus
  #namespace: demo-namespace
type: kubernetes.io/dockerconfigjson
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-demo
 # namespace: demo-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      imagePullSecrets:
        - name: docker-nexus
      containers:
        - name: back-end
          image: 440953937617.dkr.ecr.us-east-2.amazonaws.com/rollback-argo-test:rollback-argo
          ports:
            - containerPort: 8072
          env:
          - name: DOCKER_ENV
            value: "dev"

---
#Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argo-demo
  name: argo-demo
 # namespace: demo-namespace
spec:
  ports:
  - name: http
    port: 8072
    protocol: TCP
    targetPort: http
  selector:
    app: web
  sessionAffinity: None
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    name: argo-demo
  name: argo-demo
 # namespace: demo-namespace
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: argo-demo
            port:
              number: 8072
        path: /
        pathType: Prefix
    host: argo-demo-1.playground.opsera.io
   
 ---
